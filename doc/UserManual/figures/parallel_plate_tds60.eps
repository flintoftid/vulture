%!PS-Adobe-2.0 EPSF-2.0
%%Title: parallel_plate_tds60.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat Jun  1 09:35:57 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (parallel_plate_tds60.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (idf1)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jun  1 09:35:57 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
1.000 UL
LTb
1.000 UL
LTb
1008 1281 M
4294 690 L
6192 1713 M
4294 690 L
1008 1281 M
0 2046 V
4294 690 M
6192 1713 M
stroke
LCb setrgbcolor
6064 1054 M
[ [(Helvetica) 180.0 0.0 true true 0 (i \(cells\))]
] -60.0 MCshow
LTb
LCb setrgbcolor
2177 729 M
[ [(Helvetica) 180.0 0.0 true true 0 (j \(cells\))]
] -60.0 MCshow
LTb
1.000 UL
LTb
1008 1281 M
63 0 V
stroke
882 1281 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 1485 M
63 0 V
stroke
882 1485 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 1690 M
63 0 V
stroke
882 1690 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 1895 M
63 0 V
stroke
882 1895 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 2099 M
63 0 V
stroke
882 2099 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.4)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 2304 M
63 0 V
stroke
882 2304 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.5)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 2509 M
63 0 V
stroke
882 2509 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.6)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 2713 M
63 0 V
stroke
882 2713 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.7)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 2917 M
63 0 V
stroke
882 2917 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.8)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 3122 M
63 0 V
stroke
882 3122 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.9)]
] -60.0 MRshow
1.000 UL
LTb
1.000 UL
LTb
1008 3327 M
63 0 V
stroke
882 3327 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 1)]
] -60.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
373 2318 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Electric field, E)]
[(Helvetica) 144.0 -54.0 true true 0 (z)]
[(Helvetica) 180.0 0.0 true true 0 (\(i,j,10\) \(V/m\))]
] -42.0 MCshow
grestore
LTb
3599 4697 M
[ [(Helvetica) 180.0 0.0 true true 0 (Time-step: 60)]
] -60.0 MCshow
1.000 UP
% Begin plot #1
2.000 UL
LT0
0.90 0.00 0.00 C 4294 689 M
190 102 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
4130 718 M
189 102 V
190 103 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
3965 748 M
190 102 V
190 102 V
190 103 V
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 102 V
3801 778 M
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
190 102 V
190 102 V
3637 811 M
189 102 V
190 103 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
3472 860 M
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 103 V
3308 966 M
190 102 V
190 103 V
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
3144 1223 M
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
189 102 V
190 103 V
2979 1736 M
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 103 V
2815 2448 M
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
stroke 3764 2960 M
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
2651 2995 M
190 102 V
189 103 V
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
2486 2966 M
190 102 V
190 103 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
2322 2399 M
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
2158 1746 M
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 103 V
1993 1343 M
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
1829 1195 M
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
190 102 V
190 102 V
1665 1402 M
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 102 V
190 103 V
190 102 V
190 103 V
189 102 V
1500 1864 M
190 102 V
190 103 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
1336 2576 M
190 103 V
190 102 V
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 103 V
190 102 V
stroke 3234 3600 M
1172 3202 M
190 103 V
189 102 V
190 103 V
190 102 V
190 102 V
189 103 V
190 102 V
190 102 V
190 103 V
189 102 V
1007 3291 M
190 102 V
190 102 V
190 103 V
189 102 V
190 102 V
190 103 V
190 102 V
189 103 V
190 102 V
190 102 V
6192 1712 M
-165 30 V
-164 29 V
-164 30 V
-165 34 V
-164 49 V
-164 106 V
-165 257 V
-164 513 V
-164 712 V
-165 547 V
-164 -29 V
4220 3423 L
4055 2770 L
3891 2367 L
3727 2218 L
-165 208 V
-164 462 V
-164 712 V
-165 626 V
-164 88 V
6002 1610 M
-165 29 V
-164 30 V
-164 30 V
-165 33 V
-164 49 V
-164 106 V
-165 257 V
-164 513 V
-164 712 V
-164 547 V
-165 -29 V
4030 3320 L
3866 2667 L
3701 2264 L
3537 2116 L
-164 208 V
-165 461 V
-164 713 V
-164 626 V
-165 88 V
5812 1507 M
-164 30 V
-165 30 V
-164 30 V
-164 33 V
-165 49 V
-164 106 V
-164 257 V
-165 513 V
-164 712 V
-164 547 V
-165 -29 V
3840 3218 L
3676 2565 L
3511 2162 L
3347 2014 L
-164 207 V
-165 462 V
-164 712 V
-164 626 V
-165 89 V
5622 1405 M
-164 30 V
-164 29 V
-165 30 V
-164 34 V
-164 48 V
-165 107 V
-164 256 V
-164 513 V
-165 713 V
-164 547 V
-164 -29 V
3650 3116 L
3486 2462 L
3322 2060 L
3157 1911 L
-164 208 V
-164 462 V
-165 712 V
-164 626 V
-164 88 V
5433 1303 M
-165 29 V
-164 30 V
-164 30 V
-165 33 V
-164 49 V
-164 106 V
-165 257 V
-164 513 V
-164 712 V
-165 547 V
-164 -29 V
3461 3013 L
3296 2360 L
3132 1957 L
2968 1809 L
-165 207 V
-164 462 V
-164 712 V
-165 627 V
-164 88 V
5243 1200 M
-165 30 V
-164 30 V
-164 30 V
-165 33 V
-164 49 V
-164 106 V
-165 257 V
-164 513 V
-164 712 V
-164 547 V
-165 -29 V
3271 2911 L
3107 2258 L
2942 1855 L
2778 1707 L
-164 207 V
-165 462 V
-164 712 V
-164 626 V
-165 88 V
5053 1098 M
-164 30 V
-165 29 V
-164 30 V
-164 34 V
-165 48 V
-164 107 V
-164 256 V
-165 513 V
-164 712 V
-164 548 V
-165 -29 V
3081 2808 L
2917 2155 L
2752 1753 L
2588 1604 L
-164 208 V
-165 462 V
-164 712 V
-164 626 V
-165 88 V
4863 996 M
-164 29 V
-164 30 V
-165 30 V
-164 33 V
-164 49 V
-165 106 V
-164 257 V
-164 513 V
-165 712 V
-164 547 V
-164 -29 V
2891 2706 L
2727 2053 L
2563 1650 L
2398 1502 L
-164 207 V
-164 462 V
-165 712 V
-164 627 V
-164 88 V
4674 893 M
-165 30 V
-164 29 V
-164 31 V
-165 33 V
-164 49 V
-164 106 V
-165 257 V
-164 513 V
-164 712 V
-165 547 V
-164 -29 V
2702 2604 L
2537 1951 L
2373 1548 L
2209 1400 L
-165 207 V
-164 462 V
-164 712 V
-165 626 V
-164 88 V
4484 791 M
-165 29 V
-164 30 V
-164 30 V
-165 33 V
-164 49 V
-164 106 V
-165 257 V
-164 513 V
-164 712 V
-164 547 V
-165 -29 V
2512 2501 L
2348 1848 L
2183 1446 L
2019 1297 L
-164 208 V
-165 461 V
-164 713 V
-164 626 V
-165 88 V
4294 689 M
-164 29 V
-165 30 V
-164 30 V
-164 33 V
-165 49 V
3308 966 L
-164 257 V
-165 513 V
-164 712 V
-164 547 V
-165 -29 V
2322 2399 L
2158 1746 L
1993 1343 L
1829 1195 L
-164 207 V
-165 462 V
-164 712 V
-164 626 V
-165 89 V
% End plot #1
stroke
1.000 UL
LTb
6192 1713 M
2906 2304 L
1008 1281 M
2906 2304 L
0 2010 V
4294 690 M
-88 15 V
stroke
4444 645 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MLshow
1.000 UL
LTb
1.000 UL
LTb
1008 1281 M
88 -16 V
4768 945 M
-87 16 V
stroke
4919 900 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5)]
] -60.0 MLshow
1.000 UL
LTb
1.000 UL
LTb
1483 1536 M
87 -15 V
5243 1201 M
-88 16 V
stroke
5393 1156 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MLshow
1.000 UL
LTb
1.000 UL
LTb
1957 1792 M
88 -15 V
5717 1457 M
-87 16 V
stroke
5867 1412 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15)]
] -60.0 MLshow
1.000 UL
LTb
1.000 UL
LTb
2432 2048 M
87 -15 V
6192 1713 M
-88 16 V
stroke
6342 1668 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MLshow
1.000 UL
LTb
1.000 UL
LTb
2906 2304 M
88 -16 V
1008 1281 M
32 17 V
stroke
954 1232 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
2906 2304 M
-32 -17 V
1419 1207 M
32 17 V
stroke
1365 1158 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 5)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
3317 2230 M
-32 -17 V
1830 1133 M
32 17 V
stroke
1776 1084 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 10)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
3727 2156 M
-32 -17 V
2241 1059 M
31 17 V
stroke
2187 1010 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 15)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
4137 2083 M
-31 -17 V
2652 985 M
31 17 V
stroke
2598 936 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 20)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
4548 2009 M
-31 -17 V
3063 911 M
31 17 V
stroke
3009 863 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 25)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
4959 1935 M
-31 -17 V
3473 837 M
32 17 V
stroke
3419 789 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 30)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
5370 1861 M
-32 -17 V
3883 763 M
32 17 V
stroke
3829 715 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 35)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
5781 1787 M
-32 -17 V
4294 690 M
32 17 V
stroke
4240 641 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 40)]
] -60.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
6192 1713 M
-32 -17 V
stroke
LCb setrgbcolor
373 2318 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (Electric field, E)]
[(Helvetica) 144.0 -54.0 true true 0 (z)]
[(Helvetica) 180.0 0.0 true true 0 (\(i,j,10\) \(V/m\))]
] -42.0 MCshow
grestore
LTb
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
